<?xml version="1.0" ?>
<project name="Quokka" default="test" xmlns="http://nant.sf.net/release/0.86-beta1/nant.xsd">
	<property name="nant.settings.currentframework" value="net-3.5"/>
	<property name="framework.dir" value="${framework::get-framework-directory(nant.settings.currentframework)}"/>


	<property name="config" value="Release"/>

	<property name="output.bin.dir" value="${path::get-full-path('../bin')}" overwrite="false"/>
	<property name="output.artifacts.dir" value="${path::get-full-path('../artifacts')}" overwrite="false"/>
	
	<property name="tools.dir" value="${path::get-full-path('../tools')}"/>
	<property name="nunit.dir" value="${path::combine(tools.dir, 'NUnit')}"/>
	<property name="nunit.bin.dir" value="${path::combine(nunit.dir, 'bin')}"/>
	<property name="ncover.dir" value="${path::combine(tools.dir, 'NCover')}"/>
	<property name="temp.dir" value="${path::get-full-path('../temp')}"/>
	<property name="unittest.dir" value="${path::combine(temp.dir, 'unittest')}"/>
	<property name="coverage.dir" value="${path::combine(temp.dir, 'coverage')}"/>
	<property name="msbuild.dir" value="${framework.dir}"/>

	<property name="nunit-console.exe" value="${path::combine(nunit.bin.dir, 'nunit-console.exe')}"/>

	<!-- 
		VERSION NUMBERING STANDARD:
		
		The version number is acquired from an environment variable BUILD_NUMBER, which is set
		by the TeamCity build agent.
	-->
	
	<property name="product.version" value="${environment::get-variable('BUILD_NUMBER')}" if="${environment::variable-exists('BUILD_NUMBER')}"/>
	<property name="product.version" value="0.1.0" overwrite="false"/>
	<echo message="product.version: ${product.version}"/>

	<!-- parse the product.version for the major, minor, build and revision -->	
	<property name="version.major" value="${version::get-major(version::parse(product.version))}"/>
	<property name="version.minor" value="${version::get-minor(version::parse(product.version))}"/>
	<property name="version.build" value="${version::get-build(version::parse(product.version))}"/>
	<property name="version.revision" value="${version::get-revision(version::parse(product.version))}"/>

	<!-- default values for version if any part is not defined -->
	<!-- cannot default to 0.0.0.0, because that upsets the WiX build script, so we default to 0.1.0.0 -->
	<property name="version.major" value="0" if="${version.major=='-1'}"/>
	<property name="version.minor" value="1" if="${version.minor=='-1'}"/>
	<property name="version.build" value="0" if="${version.build=='-1'}"/>
	<property name="version.revision" value="0" if="${version.revision=='-1'}"/>
	
	<!-- full product version, always has 4 parts (major, minor, build, revision) -->
	<property name="full.product.version" value="${version.major}.${version.minor}.${version.build}.${version.revision}"/>
	<echo message="full.product.version: ${full.product.version}"/>

	<target name="clean">
		<delete>
			<fileset>
				<include name="Quokka.*/bin/**"/>
				<include name="Quokka.*/obj/**"/>
				<include name="${temp.dir}/**"/>
				<include name="CommonAssemblyInfo.cs"/>
			</fileset>
		</delete>
	</target>

	<target name="timestamp">
		<tstamp>
			<formatter property="build.year" pattern="yyyy"/>
			<formatter property="build.timestamp" pattern="yyyy-MM-ddTHH:mm:ss"/>
			<formatter property="build.date" pattern="yyyy-MM-dd"/>
			<formatter property="build.year.month" pattern="yyMM"/>
			<formatter property="build.day.hour" pattern="ddHH"/>
			<formatter property="build.minute.second" pattern="mmss"/>
		</tstamp>
	</target>
	
	<target name="CommonAssemblyInfo.cs" depends="timestamp">
		<asminfo language="CSharp" output="CommonAssemblyInfo.cs">
			<imports>
				<import namespace="System"/>
				<import namespace="System.Reflection"/>
			</imports>
			<attributes>
				<attribute type="AssemblyVersionAttribute" value="${full.product.version}"/>
				<attribute type="AssemblyConfigurationAttribute" value="${config}"/>
				<attribute type="AssemblyCompanyAttribute" value="Quokka.org"/>
				<attribute type="AssemblyProductAttribute" value="Quokka"/>
				<attribute type="AssemblyCopyrightAttribute" value="Copyright 2004-${build.year}. All Rights Reserved."/>
			</attributes>
		</asminfo>
	</target>

	<target name="compile" depends="CommonAssemblyInfo.cs">
		<exec program="msbuild.exe" basedir="${msbuild.dir}">
			<arg value="/property:Configuration=${config}"/>
			<arg value="/property:FormalBuild=true"/>
			<arg file="Quokka.sln"/>
		</exec>

		<copy todir="${output.bin.dir}">
			<fileset basedir="Quokka.Tests/bin/${config}">
				<include name="*.dll"/>
				<include name="*.pdb"/>
				<include name="*.xml"/>
			</fileset>
		</copy>
		<copy todir="${output.bin.dir}">
			<fileset basedir="Quokka.WinForms.Tests/bin/${config}">
				<include name="*.dll"/>
				<include name="*.pdb"/>
				<include name="*.xml"/>
			</fileset>
		</copy>
		<copy todir="${output.bin.dir}">
			<fileset basedir="Sprocket.Server/bin/${config}">
				<include name="*.exe"/>
				<include name="*.dll"/>
				<include name="*.pdb"/>
				<include name="*.xml"/>
				<include name="*.config"/>
				<exclude name="*.vshost.exe*"/>
			</fileset>
		</copy>
		<copy todir="${output.bin.dir}">
			<fileset basedir="Sprocket.Manager/bin/${config}">
				<include name="*.exe"/>
				<include name="*.dll"/>
				<include name="*.pdb"/>
				<include name="*.xml"/>
				<include name="*.config"/>
				<exclude name="*.vshost.exe*"/>
			</fileset>
		</copy>			
	</target>
	<target name="msi" depends="compile">
		<nant>
			<buildfiles>
				<include name="Sprocket.Setup/setup.build"/>
			</buildfiles>
			<properties>
				<property name="config" value="${config}"/>
				<property name="version" value="${full.product.version}"/>
				<property name="msi.dir" value="${output.artifacts.dir}"/>
			</properties>
		</nant>
	</target>
	<target name="test" depends="msi">
		<nunit2>
			<formatter type="Plain"/>
			<test assemblyname="${output.bin.dir}/Quokka.Tests.dll"/>
		</nunit2>
	</target>

	<target name="test.coverage" depends="test">
		<nant target="compile.tests" buildfile="${project::get-buildfile-path()}">
			<properties>
				<property name="output.bin.dir" value="${coverage.dir}"/>
				<property name="debug" value="true"/>
			</properties>
		</nant>
		<copy file="${nunit.bin.dir}/nunit.framework.dll" todir="${coverage.dir}"/>
		<exec program="NCover.Console.exe" basedir="${ncover.dir}" workingdir="${coverage.dir}">
			<arg value='"${nunit-console.exe}"'/>
			<arg value='"Quokka.Tests.dll /xml:Quokka.Tests.dll-results.xml /nologo"'/>
			<arg value="//a"/>
			<arg value="Quokka"/>
		</exec>
		<copy file="${ncover.dir}/Coverage.xsl" todir="${coverage.dir}"/>
	</target>
</project>
